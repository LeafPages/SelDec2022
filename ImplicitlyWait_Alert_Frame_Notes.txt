Wait -> to address timing difference between the script & application
	    to make the script and application in sync
		
Selenium Wait:
---------------
1. Implicitly Wait 
2. Explicitly Wait		

Java Wait: (Explicit Wait)
-----------
Thread.sleep(time) -> It will slow down the execution
					  This has to be applied wherever needed
					  It will wait till the end of the time limit
					  
					  
					  
Implicitly Wait:
-----------------
- Its a common wait for all the locators in my script (findElement & findElements)			
- It is used to avoid the NoSuchElementException when the element is loaded little late
- If the element is loaded within the given time limit, it will locate element immediately and 
  proceed with next step in the script
- If the element is not loaded within the given time limit, it will throw NoSuchElementException
- Best practice is, apply ImplicitlyWait at the starting of your script

Alert:
-------
Modal Dialog: Java Script function. We can't inspect the alert elements. Unless we handle alert, we can
              not interact with the Webpage elements
	
	Simple Alert: Alert message with 1 button
	------------
			getText() -> to read the message from the alert
			accept() -> to click on Ok button
	Confirm Alert: Alert message with 2 buttons
	---------------
			getText() -> to read the message from the alert
			accept() -> to click on Ok button
			dismiss() -> to click on Cancel button
	
	Prompt Alert: Alert message with 1 input field and 2 buttons
	-------------
			getText() -> to read the message from the alert
			sendKeys() -> to type a value in the input field
			accept() -> to click on Ok button
			dismiss() -> to click on Cancel button
			
Exceptions:
------------
NoAlertPresentException -> If the alert is not available and when we try to do some action on the 		
                           alert	

UnhandledAlertException -> When we try to access other elements without handling alert in the application
						   
			
	
Non-Modal Dialog:
	Sweet Alert - We can able to inspect the elements in the alert
	
	
How to Handle Frame:
---------------------
<frame> / <iframe> -> tag used to create frame
					  DOM inside another DOM / html code embadded inside another html code
					  Frequently changing content will be created inside the frame
						- Without disturbing the main page / content
						
iframe - inline frame -> used when we want to change the position of frame	

Exception:
-----------
NoSuchFrameException -> If the given frame is not available in the DOM

Nested Frames:
==============
driver.switchTo().frame("frame1");
driver.switchTo().frame("frame2"); 
driver.switchTo().frame("frame3");
driver.switchTo().frame("frame4");

driver.findElement(By.XPath("textbased")).getText();

you are inside frame4
----------------------

Need to read the text from frame1

driver.switchTo().parentFrame(); //frame3
driver.switchTo().parentFrame(); //frame2
driver.switchTo().parentFrame(); //frame1	
	